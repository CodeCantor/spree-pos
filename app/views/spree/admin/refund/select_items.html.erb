<%= form_tag 'create_refund' do |f| %>
    <%= hidden_field_tag :rma, @return_authorization.number %>
    <%= hidden_field_tag :order_number, @order.number %>
    <table>
        <thead>
        <tr data-hook="rma_header">
            <th><%= Spree.t(:product) %></th>
            <th><%= Spree.t(:quantity_shipped) %></th>
            <th><%= Spree.t(:quantity_returned) %></th>
            <th><%= Spree.t(:return_quantity) %></th>
        </tr>
        </thead>
        <tbody>
            <% @return_authorization.order.shipments.shipped.collect{|s| s.inventory_units.to_a}.flatten.group_by(&:variant).each do | variant, units| %>
                <tr id="<%= dom_id(variant) %>" data-hook="rma_row" class="<%= cycle('odd', 'even')%>">
                    <td>
                        <div class="variant-name"><%= variant.name %></div>
                        <div class="variant-options"><%= variant.options_text %></div>
                    </td>
                    <td class="align-center"><%= units.select(&:shipped?).size %></td>
                    <td class="align-center"><%= units.select(&:returned?).size %></td>
                    <td class="return_quantity align-center">
                        <% if @return_authorization.received? %>
                            <%= @return_authorization.inventory_units.group_by(&:variant)[variant].try(:size) || 0 %>
                        <% elsif units.select(&:shipped?).empty? %>
                            0
                        <% else %>
                            <%= number_field_tag "return_quantity[#{variant.id}]",
                                                 @return_authorization.inventory_units.group_by(&:variant)[variant].try(:size) || 0, {:style => 'width:100px;', :min => 0} %>
                        <% end %>
                    </td>
                </tr>
            <% end %>
         </tbody>
    </table>
    <div>
        <p>ORDER TOTAL AMOUNT: <%= @order.display_total.to_html %></p>
        <% if @order.adjustments.eligible.count > 0 %>
            <p>Adjustments</p>
            <ul>
                <% @order.adjustments.eligible.each do |adjustment| %>
                    <li>
                        <%= adjustment.label %>:
                        <%= adjustment.display_amount.to_html %>
                    </li>
                <% end %>
            </ul>
        <% end %>
    </div>
    <%= label_tag :coupon_description , Spree.t(:coupon_description) %></br>
    <%= text_area_tag :coupon_description %></br>
    <%= label_tag :coupon_amount, Spree.t(:coupon_amount) %> <span class="required">*</span><br />
    <%= text_field_tag :coupon_amount %> <%= Spree.t(:rma_value) %>: <span id="rma_value">0.00</span>
    <br />
  <%= label_tag :stock_location, Spree.t(:stock_location) %>
  <%= select_tag :stock_location_id, options_for_select(Spree::StockLocation.active.to_a.collect{|l|[l.name, l.id]}) %>

    <%= submit_tag 'Create refund' %>
<% end %>

<script>
    var line_item_prices = {};
    <% @return_authorization.order.line_items.group_by(&:variant).each do | variant, items| %>
    line_item_prices[<%= variant.id.to_s %>] = <%= items.first.price %>;
    <% end %>

    $(document).ready(function(){
        var rma_amount = 0;
        $("td.return_quantity input").on('change', function() {
            var rma_amount = 0;
            $.each($("td.return_quantity input"), function(i, input) {
                var variant_id = $(input).attr('id').replace("return_quantity_", "");
                rma_amount += line_item_prices[variant_id] * $(input).val()
            });

            if(!isNaN(rma_amount)){
                $("span#rma_value").html(rma_amount.toFixed(2));
            }
        })
    });
</script>
